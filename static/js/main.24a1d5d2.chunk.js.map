{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","redux/dialog-reducer.js","components/Dialogs/DialogItems/DialogItems.jsx","components/Dialogs/Message/Message.jsx","utils/validators/MessageFormSchema.js","components/Common/FormControls/FormControls.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","assets/images/user.png","components/Common/Paginator/Paginator.jsx","redux/users-selector.js","components/Users/User.jsx","components/Users/Users.jsx","API/api.js","redux/users-reducer.js","assets/images/spinner.svg","components/Common/Preloader.jsx","components/Users/UsersContainer.jsx","redux/profile-reducer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","utils/validators/PostsFormSchema.js","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","utils/validators/LoginFormSchema.js","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","components/Dialogs/Dialogs.module.css","components/Common/Paginator/Paginator.module.css","components/Users/Users.module.css","components/Common/FormControls/FormControls.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","console","log","s","c2","Navbar","item","className","nav","to","activeClassName","activeLink","href","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageBody","dialogReducer","state","action","type","body","DialogItems","props","path","dialog","Message","MessageFormSchema","Yup","shape","min","max","required","FormControls","label","useField","field","meta","touched","error","styles","textError","Dialogs","dialogsPages","dialogElements","map","d","messageElements","m","dialogsItems","initialValues","onSubmit","values","sendMessage","validationSchema","errors","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","dirty","as","disabled","mapStateToPropsForRedirect","isAuth","authR","compose","connect","dispatch","Component","RedirectComponent","this","React","Paginator","totalItemsCount","pageSize","onPageChanged","currentPage","portionSize","totalPages","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","onClick","filter","p","selectedPage","pageNumber","getUsers","createSelector","userPages","users","u","getPageSize","getTotalUserCount","totalUserCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","User","user","src","photos","small","userPhoto","followed","some","toggleFollowingProgress","unfollow","follow","status","Users","key","instance","axios","withCredentials","baseURL","headers","userAPI","get","then","response","data","UserId","post","delete","getProfile","warn","profileAPI","authAPI","email","password","rememberMe","getStatus","updateStatus","put","savePhoto","photoFile","formData","FormData","append","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","TOTAL_COUNT_PAGE","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","isFollowFetching","followUnfollowFlow","actionCreator","apiMethod","a","resultCode","usersReducer","Preloader","style","backgroundColor","spinner","UsersContainer","bind","page","items","totalCount","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","likesCount","profile","setStatus","profileReducer","newPost","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","ProfileInfo","descriptionBlock","large","isOwner","target","files","length","Post","PostsFormSchema","MyPosts","postElements","postBlock","addPost","MyPostsContainer","profilePage","newPostText","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","getUserProfile","file","withRouter","Header","header","loginBlock","login","logout","SET_USER_DATA","setUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginFormSchema","LoginContainer","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","Reducers","combineReducers","sidebar","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","App","initializeApp","render","DialogsContainer","AppContainer","promise","Promise","all","SamuraiJsApp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.24a1d5d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2YPQ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__15Ws3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2z06N\",\"item\":\"Navbar_item__37l3U\",\"activeLink\":\"Navbar_activeLink__3t4JI\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nconsole.log(s);\r\n// let s = {\r\n//     'nav': 'Navbar_nav__3ou9Q',\r\n//     'item': 'Navbar_item__3qaF3',\r\n//     'active' : 'Baksndakdn_actve'\r\n // }\r\n\r\nlet c1 = \"item\";\r\nlet c2 = \"active\";\r\n// \"item active\"\r\nlet classes = c1 + \" \" + c2;\r\nlet classesNew = `${s.item} ${c2}`;\r\n\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n\r\n        <div className={s.item}>\r\n            <a href=\"/news\">News</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a href=\"/music\">Music</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a href=\"/settings\">Settings</a>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","/*const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY ';*/\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dmitriy\"},\r\n        {id: 2, name: \"Andrey\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Viktor\"},\r\n        {id: 6, name: \"Valera\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How are you\"},\r\n        {id: 3, message: \"Yo\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"}\r\n    ],\r\n    newMessageBody: 'it-kamasutra.com'\r\n};\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n       /* case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n*/\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n               // newMessageBody: '',\r\n                messages: [...state.messages, ({id: 7, message: body})]\r\n\r\n            };\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => {\r\n    return {\r\n        type: SEND_MESSAGE,newMessageBody:newMessageBody\r\n    }\r\n}\r\n/*export const updateNewMessageCreator = (body) => {\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE_BODY, body: body\r\n    }\r\n}*/\r\n\r\n\r\nexport default dialogReducer;\r\n","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst DialogItems = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItems","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import * as Yup from \"yup/es\";\r\n\r\n\r\nconst MessageFormSchema = Yup.object().shape({\r\n\r\n    message: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required')\r\n\r\n\r\n});\r\nexport default MessageFormSchema;","import React from \"react\";\r\nimport {Field, useField} from \"formik\";\r\nimport styles from \"./FormControls.module.css\"\r\n\r\nconst FormControls = ({ label, ...props }) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <>\r\n            <label>{label}</label>\r\n            <div>\r\n            <Field  className={meta.touched && meta.error? styles.error:null}\r\n                       {...field} {...props}/>\r\n\r\n            </div>\r\n            {meta.touched && meta.error ? (\r\n                <div className={styles.textError}>{meta.error}</div>\r\n            ) : null}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormControls;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItems from \"./DialogItems/DialogItems\";\r\nimport Message from \"./Message/Message\";\r\nimport {Formik} from \"formik\";\r\nimport MessageFormSchema from \"../../utils/validators/MessageFormSchema\";\r\nimport FormControls from \"../Common/FormControls/FormControls\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPages;\r\n\r\n    let dialogElements = state.dialogs.map(d => <DialogItems name={d.name} id={d.id}/>)\r\n    let messageElements = state.messages.map(m => <Message message={m.message}/>)\r\n\r\n   /* let newMessageBody = state.newMessageBody;\r\n\r\n    let onSendMessageClick  = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onNewMessageChange = (event) => {\r\n        let body = event.target.value;\r\n        props.updateMessage(body);\r\n    }*/\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <div>\r\n                   {/*<div><textarea value={newMessageBody}\r\n                                   onChange={onNewMessageChange}\r\n                                   placeholder=\"Enter your message\"></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>Send</button>\r\n                    </div>*/}\r\n\r\n                    <Formik\r\n                        initialValues={{ message:'' }}\r\n                        onSubmit={(values) => {\r\n                            console.log(values)\r\n                            props.sendMessage(values.message)\r\n                        }}\r\n                        validationSchema={MessageFormSchema}\r\n                    >\r\n                        {({\r\n                              values,\r\n                              errors,\r\n                              touched,\r\n                              handleChange,\r\n                              handleBlur,\r\n                              handleSubmit,\r\n                              isSubmitting,\r\n                            isValid,\r\n                            dirty\r\n                              /* and other goodies */\r\n                          }) => (\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div>\r\n                                   {/* <textarea className={touched.message && errors.message && styles.error}\r\n                                        type=\"text\"\r\n                                        name=\"message\"\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        value={values.message}\r\n                                    />*/}\r\n                                    <FormControls as=\"textarea\" type=\"text\" name=\"message\"  label=\"Add posts\"/>\r\n                                    {/*<ErrorMessage name=\"message\" component=\"div\" />*/}\r\n\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <button type=\"submit\" disabled={!isValid && !dirty}>\r\n                                        Send\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect=(state)=> {\r\n    return {\r\n        isAuth: state.authR.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect=(Component)=>{\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login' />\r\n            return <Component {...this.props} />\r\n        }\r\n            }\r\n            let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n            return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from 'react';\r\n\r\nimport {sendMessageCreator} from \"../../redux/dialog-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        newMessageBody:state.dialogsPages.newMessageBody,\r\n        dialogsPages:state.dialogsPages,\r\n\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n       /* updateMessage:(body)=>{\r\n            dispatch(updateNewMessageCreator(body));\r\n        },*/\r\n        sendMessage:(message)=>{\r\n            dispatch(sendMessageCreator(message));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n/*\r\nlet authRedirectComponent=withAuthRedirect(Dialogs);\r\n\r\nconst DialogsContainer =connect(mapStateToProps,mapDispatchToProps)(Dialogs);\r\n*/\r\n\r\n//export default DialogsContainer;\r\n","export default __webpack_public_path__ + \"static/media/user.a45dac52.png\";","import React, {useState} from \"react\";\r\nimport styles from './Paginator.module.css'\r\nimport cn from 'classnames'\r\n\r\nconst Paginator=({totalItemsCount,pageSize,onPageChanged,currentPage,portionSize=10})=>{\r\n    let totalPages = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount=Math.ceil(totalPages/portionSize);\r\nlet [portionNumber,setPortionNumber]=useState(1);\r\n    let leftPortionPageNumber=(portionNumber-1)*portionSize+1;\r\n     let  rightPortionPageNumber =portionNumber*portionSize;\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p=> p<=rightPortionPageNumber && p>=leftPortionPageNumber)\r\n                .map(p => {\r\n                return <span className={ cn({[styles.selectedPage]:currentPage === p},styles.pageNumber)}\r\n                             onClick={() => onPageChanged(p)}\r\n                             key={p}\r\n                >{p}</span>\r\n            })}\r\n\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n        </div>\r\n    }\r\n\r\n/*const Paginator=({totalUserCount,pageSize,onPageChanged,currentPage,...props})=>{\r\n    let totalPages = Math.ceil(totalUserCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n\r\n        {pages.map(p => {\r\n            return <span onClick={() => onPageChanged(p)}\r\n                         className={currentPage === p && styles.selectedPage}>{p}</span>\r\n        })}\r\n    </div>\r\n}*/\r\n\r\n\r\nexport default Paginator;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector=(state)=>{\r\n    return state.userPages.users\r\n}\r\n export const getUsers=createSelector(getUsersSelector,(users)=> {\r\n     return users.filter(u => true)\r\n })\r\n\r\n export const getPageSize=(state)=>{\r\n     return state.userPages.pageSize\r\n }\r\n export const getTotalUserCount=(state)=>{\r\n     return state.userPages.totalUserCount\r\n }\r\n export const getCurrentPage=(state)=>{\r\n     return state.userPages.currentPage\r\n }\r\n export const getIsFetching=(state)=>{\r\n     return state.userPages.isFetching\r\n }\r\n export const getFollowingInProgress=(state)=>{\r\n     return state.userPages.followingInProgress\r\n }\r\n","import React from \"react\";\r\nimport styles from './Users.module.css'\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport {getFollowingInProgress} from \"../../redux/users-selector\";\r\n\r\nlet User = ({user,...props}) => {\r\nlet u=user;\r\n    return <div>\r\n\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small = null ? u.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                    </NavLink>\r\n                    </div>\r\n                    <div>{\r\n                        u.followed ?\r\n                            <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.toggleFollowingProgress(true, u.id);\r\n                                props.unfollow(u.id);\r\n\r\n                            }}>Unfollow</button> :\r\n\r\n                            <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.toggleFollowingProgress(true, u.id);\r\n                                props.follow(u.id);\r\n                            }}>Follow</button>\r\n                    }\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n                </span>\r\n                    <span>\r\n                    <div>{\"u.location.country\"}</div>\r\n                    <div>{\"u.location.city\"}</div>\r\n                </span>\r\n                </div>\r\n\r\n}\r\n\r\n\r\nexport default User;","import React from \"react\";\r\nimport styles from './Users.module.css'\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({totalUserCount, pageSize, onPageChanged, currentPage, ...props}) => {\r\n\r\n    return <div>\r\n\r\n        <Paginator totalItemsCount={totalUserCount} pageSize={pageSize} onPageChanged={onPageChanged}\r\n                   currentPage={currentPage}/>\r\n        <div>\r\n            {\r\n                props.users.map(u => <User user={u}\r\n                                           {...props}\r\n                                           key={u.id}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;\r\n","import * as axios from \"axios\";\r\n\r\n\r\nconst instance=axios.create({\r\n    withCredentials:true,\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0',\r\n    headers:{\r\n        \"API-KEY\": \"04f314d1-e1c2-405c-90c5-59a7352bc31c\"\r\n    }\r\n})\r\n\r\nexport const userAPI= {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(UserId){\r\n        return instance.post (`follow/${UserId}`)\r\n    },\r\n    unfollow(UserId){\r\n        return instance.delete (`follow/${UserId}`)\r\n    },\r\n    getProfile(UserId){\r\n        console.warn('Obsolete method.Please, use profileAPI object')\r\n        return profileAPI.getProfile(UserId);\r\n    }\r\n    }\r\n\r\nexport const authAPI= {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email,password,rememberMe=false) {\r\n        return instance.post(`auth/login`,{email,password,rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n    export const profileAPI= {\r\n        getProfile(UserId){\r\n            return instance.get(`profile/` + UserId)\r\n        },\r\n        getStatus(UserId) {\r\n            return instance.get(`profile/status/` + UserId)\r\n        },\r\n        updateStatus(status) {\r\n            return instance.put(`profile/status/`,{status:status})\r\n        },\r\n        savePhoto(photoFile){\r\n            let  formData = new FormData();\r\n            formData.append(\"image\", photoFile);\r\n            return instance.post(`profile/photo`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n        }\r\n\r\n    }\r\n","import {userAPI} from \"../API/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'setUsers';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst TOTAL_COUNT_PAGE = 'TOTAL_COUNT_PAGE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.UserId) {\r\n                        return {...u, followed: true};\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.UserId) {\r\n                        return {...u, followed: false};\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowFetching\r\n                    ? [...state.followingInProgress, action.UserId] :\r\n                    [...state.followingInProgress.filter(UserId => UserId = !action.UserId)]\r\n            }\r\n        }\r\n        case TOTAL_COUNT_PAGE: {\r\n            return {\r\n                ...state,\r\n                totalUserCount: action.totalUserCount\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (UserId) => {\r\n    return {type: FOLLOW, UserId}\r\n}\r\nexport const unfollowSuccess = (UserId) => {\r\n    return {type: UNFOLLOW, UserId}\r\n}\r\nexport const setUsers = (users) => {\r\n    return {type: SET_USERS, users}\r\n}\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {type: SET_CURRENT_PAGE, currentPage}\r\n}\r\nexport const setTotalCount = (totalUserCount) => {\r\n    return {type: TOTAL_COUNT_PAGE, totalUserCount}\r\n}\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {type: TOGGLE_IS_FETCHING, isFetching}\r\n}\r\nexport const toggleFollowingProgress = (isFollowFetching, UserId) => {\r\n    return {type: TOGGLE_IS_FOLLOWING_PROGRESS, isFollowFetching, UserId}\r\n}\r\nexport const requestUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        userAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\n\r\nlet followUnfollowFlow=async (dispatch,actionCreator,apiMethod,UserId)=>{\r\n    dispatch(toggleFollowingProgress(true, UserId));\r\n    let response= await  apiMethod(UserId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(UserId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, UserId));\r\n}\r\n\r\nexport const follow = (UserId) => (dispatch) => {\r\n          followUnfollowFlow(dispatch,followSuccess,userAPI.follow.bind(userAPI),UserId);\r\n                /*if (response.data.resultCode == 0) {\r\n                    dispatch(followSuccess(UserId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, UserId));\r\n                */\r\n    }\r\n\r\n\r\n    export const unfollow = (UserId) => (dispatch) => {\r\n                followUnfollowFlow(dispatch, unfollowSuccess, userAPI.unfollow.bind(userAPI), UserId);\r\n    }\r\n\r\nexport default usersReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/spinner.34be5cf0.svg\";","import React from 'react';\r\nimport spinner from '../../assets/images/spinner.svg'\r\n\r\nlet Preloader=(props)=>{\r\n    return <div style={ {backgroundColor:'white'} }>\r\n        <img src={spinner} />\r\n    </div>\r\n}\r\n\r\n    export default Preloader;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {follow, requestUsers, setCurrentPage, toggleFollowingProgress, unfollow} from \"../../redux/users-reducer\";\r\nimport Preloader from \"../Common/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUserCount,\r\n    getUsers\r\n} from \"../../redux/users-selector\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\nthis.props.getUsers(this.props.currentPage,this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n\r\n        this.props.getUsers(pageNumber,this.props.pageSize);\r\n        //this.props.setCurrentPage(pageNumber);\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users pageSize={this.props.pageSize}\r\n                   totalUserCount={this.props.totalUserCount}\r\n                   onPageChanged={this.onPageChanged}\r\n                   currentPage={this.props.currentPage}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount:getTotalUserCount(state) ,\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n/*const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (UserId) => {\r\n            dispatch(followAC(UserId));\r\n        },\r\n        unfollow: (UserId) => {\r\n            dispatch(ufollowAC(UserId));\r\n        },\r\n        toggle: (UserId) => {\r\n            dispatch(toggleAC(UserId));\r\n        },\r\n\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageAC(currentPage));\r\n        },\r\n        setTotalCount: (totalCount) => {\r\n            dispatch(totalCountPageAC(totalCount));\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(togglesIsFetchingAC(isFetching));\r\n        }\r\n\r\n    }\r\n}*/\r\n\r\nexport default compose(\r\n\r\n    connect(mapStateToProps, {follow,unfollow,setCurrentPage,\r\n        toggleFollowingProgress,getUsers: requestUsers}),\r\n    //withAuthRedirect\r\n)(UsersContainer)\r\n\r\n\r\n/*\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    toggle,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsers\r\n})(UsersContainer);\r\n*/\r\n\r\n","import {profileAPI, userAPI} from \"../API/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n/*const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';*/\r\nconst SET_USER_PROFILE='SET-USER-PROFILE';\r\nconst SET_STATUS='SET-STATUS';\r\nconst DELETE_POST='DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS='SAVE_PHOTO_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you', likesCount: 12},\r\n        {id: 2, message: \"It's my first post\", likesCount: 20},\r\n    ],\r\n\r\n    profile:null,\r\n    status:\"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.message,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n\r\n        case DELETE_POST:\r\n\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p=>p.id!=action.id)\r\n            }\r\n\r\n        /*case UPDATE_NEW_POST_TEXT:\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };*/\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n            case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n               //profile:{...state.profile,photos:action.photos}\r\n                profile: {...state.profile, photos: action.photos}\r\n            };\r\n        default:return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (message) => {\r\n    return {type: ADD_POST,message:message}\r\n}\r\nexport const deletePost = (id) => {\r\n    return {type: DELETE_POST,id:id}\r\n}\r\n\r\n/*export const updateNewPostTextActionCreator = (text) => {\r\n    return {type: UPDATE_NEW_POST_TEXT, newText: text}\r\n}*/\r\nexport const setUserProfile=(profile)=>{\r\n    return{type:SET_USER_PROFILE,profile}\r\n}\r\nexport const setStatus=(status)=>{\r\n    return{type:SET_STATUS,status}\r\n}\r\nexport const savePhotoSuccess=(photos)=>({type:SAVE_PHOTO_SUCCESS,photos})\r\n\r\n\r\n\r\nexport const getUserProfile=(userId)=>async(dispatch)=>{\r\nlet response=await userAPI.getProfile(userId)\r\n            dispatch(setUserProfile(response.data))\r\n    }\r\n\r\n\r\nexport const getStatus=(UserId)=>async(dispatch)=>{\r\n       let response= await profileAPI.getStatus(UserId)\r\n                dispatch(setStatus(response.data))\r\n\r\n    }\r\n\r\n\r\nexport const updateStatus=(status)=>(dispatch)=>{\r\n        profileAPI.updateStatus(status)\r\n            .then(response => {\r\n                if(response.data.resultCode===0) {\r\n                    dispatch(setStatus(status))\r\n                }\r\n            });\r\n    }\r\nexport const savePhoto=(file)=>async(dispatch)=>{\r\n   let response=await profileAPI.savePhoto(file)\r\n           // if(response.data.resultCode===0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos))\r\n           // }\r\n\r\n}\r\n\r\n\r\nexport default profileReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithHooks =(props)=> {\r\nlet [editMode,setEditMode]=useState(false);\r\nlet [status,setStatus]=useState(props.status);\r\nuseEffect(()=>{\r\n    setStatus(props.status)\r\n        },\r\n    [props.status]\r\n)\r\n   const activateEditMode=() =>{\r\n       setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode=()=> {\r\n            setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                           value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode=() =>{\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode=()=> {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n        onStatusChange = (e) => {\r\n            this.setState({\r\n                status: e.currentTarget.value\r\n            });\r\n        }\r\ncomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if(prevProps.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-------\"}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode}\r\n                           value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\n\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\"\r\n\r\nconst ProfileInfo = (props) => {\r\n if(!props.profile){\r\n    return  <Preloader />\r\n }\r\n  let onMainPhotoSelected=(e)=>{\r\n     if (e.target.files.length){\r\n         props.savePhoto(e.target.files[0]);\r\n     }\r\n    }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <div>\r\n        <img src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350' />\r\n      </div>\r\n        <div className={s.descriptionBlock}>\r\n\r\n            <img src={props.profile.photos.large || userPhoto}/>\r\n            {props.isOwner && <input type=\"file\"  onChange={onMainPhotoSelected}/>}\r\n\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRbNslP7-_P7jz5MrT5yhW14y_IzBDbZZT0ag&usqp=CAU' />\r\n      {props.message}\r\n          <div>\r\n        <span>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Post;","import * as Yup from \"yup/es\";\r\n\r\n\r\nconst PostsFormSchema = Yup.object().shape({\r\n\r\n    posts: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required')\r\n});\r\nexport default PostsFormSchema;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Formik} from \"formik\";\r\nimport PostsFormSchema from \"../../../utils/validators/PostsFormSchema\";\r\nimport FormControls from \"../../Common/FormControls/FormControls\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\nconsole.log(\"Render\");\r\n    let postElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/> )\r\n\r\n   /* let newPostElement = React.createRef();\r\n    let OnAddPost = () => {\r\n        props.addPost();\r\n    }\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }*/\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <div>\r\n                <Formik\r\n                    initialValues={{ posts:'' }}\r\n                    onSubmit={(values) => {\r\n                        props.addPost(values.posts)\r\n                    }}\r\n                    validationSchema={PostsFormSchema}\r\n                >\r\n                    {({\r\n                          values,\r\n                          errors,\r\n                          touched,\r\n                          handleChange,\r\n                          handleBlur,\r\n                          handleSubmit,\r\n                          isSubmitting,\r\n                        isValid,\r\n                        dirty\r\n                          /* and other goodies */\r\n                      }) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div>\r\n                               <FormControls as=\"textarea\" name=\"posts\" type=\"text\" label=\"posts\" />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <button type=\"submit\" disabled={!isValid && !dirty}>\r\n                                    Send\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n                </Formik>\r\n\r\n               {/* <div>\r\n                    <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={OnAddPost}>Add post</button>\r\n                </div>*/}\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\n\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        posts:state.profilePage.posts,\r\n        newPostText:state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        addPost:(message)=>{\r\n            dispatch(addPostActionCreator(message));\r\n        }/*,\r\n        updateNewPostText:(text)=>{\r\n            dispatch(updateNewPostTextActionCreator(text));\r\n        }*/\r\n    }\r\n}\r\n\r\nconst MyPostsContainer=connect(mapStateToProps,mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}\r\n      isOwner={props.isOwner} savePhoto={props.savePhoto}/>\r\n      <MyPostsContainer  />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus,savePhoto} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n       if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n     if (!userId) {\r\n            this.props.history.push(\"/login\")\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n    componentDidUpdate() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n\r\n        if (!userId) {\r\n            this.props.history.push(\"/login\")\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Profile {...this.props}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        isOwner={!this.props.match.params.userId}\r\n        savePhoto={this.props.savePhoto}/>\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isAuth:state.authR.isAuth,\r\n        authorizedUserId:state.authR.userId\r\n\r\n})\r\nexport default compose(\r\n\r\n    connect(mapStateToProps, {getUserProfile, getStatus,updateStatus,savePhoto}),\r\n    withRouter\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n/*\r\nlet withUrlDataContainerComp = withRouter(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(withUrlDataContainerComp);\r\n*/\r\n\r\n","import React from 'react';\r\nimport s from  './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png'/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth?\r\n                <div>{props.login}-<button onClick={props.logout}>logout</button></div>\r\n                    :<NavLink to={'/login'}>Login</NavLink>}\r\n\r\n        </div>\r\n\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../API/api\";\r\n\r\nconst SET_USER_DATA = 'SET-USER-DATA';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n                //isAuth: true\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n    export const setUserData = (userId, email, login,isAuth) => {\r\n        return {type: SET_USER_DATA, payload: {userId, email, login,isAuth}}\r\n    }\r\nexport const getAuthUserData=()=>async (dispatch) => {\r\n          let response=await authAPI.me()\r\n                    if (response.data.resultCode===0){\r\n                        let {id, login, email} = response.data.data;\r\n                        dispatch(setUserData(id, email, login,true));\r\n                    }\r\n    }\r\n\r\nexport const login=(email,password,rememberMe,setStatus)=> async(dispatch) => {\r\n        let response=await authAPI.login(email,password,rememberMe)\r\n                if (response.data.resultCode===0){\r\n                    dispatch(getAuthUserData());\r\n                }else{\r\n                    setStatus(response.data.messages)\r\n                }\r\n    }\r\n\r\nexport const logout=()=>async(dispatch) => {\r\n       let response= await authAPI.logout()\r\n                if (response.data.resultCode===0){\r\n                   dispatch(setUserData(null, null,null,false));\r\n                }\r\n    }\r\n\r\n\r\n    export default authReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport * as axios from \"axios\";\r\nimport Header from \"./Header\";\r\nimport {getAuthUserData, logout, setUserData} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {authAPI} from \"../../API/api\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    /*componentDidMount() {\r\n\r\n            this.props.getAuthUserData();\r\n    }*/\r\n    render() {\r\n\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authR.isAuth,\r\n        login: state.authR.login\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,{logout})(HeaderContainer);\r\n\r\n","import * as Yup from \"yup/es\";\r\n\r\n\r\nconst LoginFormSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Обязательно для ввода'),\r\n    password: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required'),\r\n    /*\r\n    posts: Yup.string()\r\n        .min(2, 'Too Short!')\r\n        .max(50, 'Too Long!')\r\n        .required('Required')*/\r\n\r\n\r\n});\r\nexport default LoginFormSchema;","import React from \"react\";\r\nimport {Formik} from \"formik\";\r\nimport LoginFormSchema from \"../../utils/validators/LoginFormSchema\";\r\nimport FormControls from \"../Common/FormControls/FormControls\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport * as formik from \"formik\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n    return (\r\n    <div>\r\n        <h1>Login</h1>\r\n        <Formik\r\n            initialValues={{ email:'', password:'',rememberMe:false }}\r\n            onSubmit={(values,{setStatus}) => {\r\n                props.login(values.email, values.password, values.rememberMe,setStatus);\r\n            }}\r\n            validationSchema={LoginFormSchema}\r\n        >\r\n            {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                isValid,\r\n                dirty,\r\n                status\r\n                  /* and other goodies */\r\n              }) => (\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        {status}\r\n                        <FormControls as=\"input\" type=\"email\" name=\"email\"  label=\"Login\"/>\r\n\r\n                    </div>\r\n                    <div>\r\n                        {status}\r\n                        <FormControls as=\"input\" type=\"password\" name=\"password\"  label=\"Password\"/>\r\n                    </div>\r\n                    <div>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"rememberMe\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                        />Remember me\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\" disabled={!isValid && !dirty}>\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>({\r\n    isAuth:state.authR.isAuth\r\n})\r\nconst LoginContainer =connect(mapStateToProps,{login})(Login);\r\nexport default LoginContainer;\r\n//export default Login;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nlet initialState={};\r\nconst sidebarReducer = (state=initialState, action) => {\r\n\r\n\r\n    return state;\r\n}\r\nexport  default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet Reducers=combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPages:dialogReducer,\r\n    sidebar:sidebarReducer,\r\n    userPages:usersReducer,\r\n    authR:authReducer,\r\n    app:appReducer\r\n    })\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(Reducers,composeEnhancers(compose(applyMiddleware(thunkMiddleware))));\r\nwindow._store_=store;\r\n//let store=createStore(Reducers,applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {HashRouter, Route, withRouter} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/Common/Preloader\";\nimport {compose} from \"redux\";\nimport store from \"./redux/redux-store\";\n\nclass App extends React.Component {\ncomponentDidMount() {\n    this.props.initializeApp();\n}\n\n    render() {\n    if(!this.props.initialized){\n       return <Preloader />\n    }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\n\n                    <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n                    <Route path=\"/login\" render={() => <LoginPage/>}/>\n\n                </div>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps=state=>({initialized:state.app.initialized})\n\n\nlet AppContainer= compose (\n    withRouter,\n        connect(mapStateToProps,{initializeApp}))(App)\n\n\n\n   const SamuraiJsApp=(props)=> {\n    return <HashRouter>\n           <Provider store={store}>\n               <AppContainer/>\n           </Provider>\n       </HashRouter>;\n   }\n\n    export default SamuraiJsApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport SamuraiJsApp from \"./App\";\n\n\n//export let rerenderEntireTree=(state)=> {\n    ReactDOM.render(\n        <SamuraiJsApp/>\n        , document.getElementById('root'));\n//}\n\n//rerenderEntireTree(store.getState());\n\n/*store.subscribe(()=>{\n    let state=store.getState();\n    rerenderEntireTree(state)\n});*/\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1qZtD\",\"dialogsItems\":\"Dialogs_dialogsItems__3XAdg\",\"active\":\"Dialogs_active__3enpf\",\"dialog\":\"Dialogs_dialog__2I4wp\",\"messages\":\"Dialogs_messages__121E4\",\"message\":\"Dialogs_message__3-_UJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__ETBmO\",\"paginator\":\"Paginator_paginator__3XCMD\",\"pageNumber\":\"Paginator_pageNumber___ucT0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1w9Tn\",\"selectedPage\":\"Users_selectedPage__2jAfQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error__1A1gF\",\"textError\":\"FormControls_textError__1je6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__2ZGRs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__tGfc_\",\"item\":\"Header_item__ZGAGR\",\"loginBlock\":\"Header_loginBlock__T9FH_\"};"],"sourceRoot":""}